{
"version":3,
"file":"compile/trapcss.js",
"lineCount":45,
"mappings":"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",
"sources":["src/err.js","src/html.js","src/css.js","src/nth.js","src/sel.js","src/find.js","src/postproc.js","src/index.js","src/depack.js"],
"sourcesContent":["function parseErr(srcType, srcStr, pos) {\n  throw new Error(srcType + ' parser stopped here: \"' + srcStr.substring(pos, pos + 100) + '\"')\n}\n\nexport { parseErr }","import { parseErr } from './err'\n\nconst TAG_OPEN = 1\nconst ATTRS = 2\nconst TAG_CLOSE = 3\n\nconst VOIDS = new Set(\"area base br col command embed hr img input keygen link meta param source track wbr\".split(\" \"))\n\n// doctype, comments, meta, style, link & script tags. TODO: CDATA\nconst NASTIES = /<!doctype[^>]*>|\u003c!--[\\s\\S]*?--\u003e|<script[^>]*>[\\s\\S]*?<\\/script>|<style[^>]*>[\\s\\S]*?<\\/style>|<link[^>]*>|<meta[^>]*>/gmi\nconst RE = {\n  NAME: /\\s*<([\\w-]+)\\s*/myi,\n  ATTR: /\\s*([\\w-:]+)(?:=\"([^\"]*)\"|='([^']*)'|=([\\w-]+))?\\s*/myi,\n  TAIL: /\\s*(\\/?>)\\s*/myi,\n  TEXT: /\\s*[^<]*/my,\n  CLOSE: /\\s*<\\/[\\w-]+>\\s*/myi,\n}\n\nfunction tokenize(html) {\n  let pos = 0, m, m2, tokens = []\n\n  function syncPos(re) {\n    pos = re.lastIndex\n    for (let k in RE)\n      RE[k].lastIndex = pos\n  }\n\n  function next() {\n    m = RE.CLOSE.exec(html)\n\n    if (m != null) {\n      syncPos(RE.CLOSE)\n      tokens.push(TAG_CLOSE)\n      return\n    }\n\n    m = RE.NAME.exec(html)\n\n    if (m != null) {\n      syncPos(RE.NAME)\n      let tag = m[1]\n      tokens.push(TAG_OPEN, tag)\n\n      let attrMap\n\n      while (m2 = RE.ATTR.exec(html)) {\n        syncPos(RE.ATTR)\n        attrMap = attrMap || new Map()\n        attrMap.set(m2[1], (m2[2] || m2[3] || m2[4] || '').trim())\n      }\n\n      if (attrMap)\n        tokens.push(ATTRS, attrMap)\n\n      m2 = RE.TAIL.exec(html)\n\n      if (VOIDS.has(tag) || m2[1] == \"/>\")\n        tokens.push(TAG_CLOSE)\n\n      syncPos(RE.TAIL)\n\n      return\n    }\n\n    m = RE.TEXT.exec(html)\n\n    if (m != null)\n      syncPos(RE.TEXT)\n  }\n\n  let prevPos = pos\n\n  while (pos < html.length) {\n    next()\n\n    if (prevPos === pos)\n      parseErr('html', html, pos)\n\n    prevPos = pos\n  }\n\n  syncPos({ lastIndex: 0 })\n\n  return tokens\n}\n\nconst EMPTY_SET = new Set()\n\n// TODO: lazy attrs, classList. then test tagNames first to reduce chance of triggering getters\nfunction node(parent, tagName, attrs) {\n  return {\n    tagName,\n    attributes: attrs,\n    classList: attrs != null && attrs.has('class') ? new Set(attrs.get('class').split(/\\s+/g)) : EMPTY_SET,\n    parentNode: parent,\n    childNodes: [],\n  }\n}\n\nconst EMPTY_ARR = []\n\n// adds ._ofTypes: {<tagName>: [...]} to parent\n// adds ._typeIdx to childNodes\nfunction getSibsOfType(par, tagName) {\n  if (par != null) {\n    let ofTypes = (par._ofTypes = par._ofTypes || {})\n\n    if (!(tagName in ofTypes)) {\n      let typeIdx = 0\n      ofTypes[tagName] = par.childNodes.filter(n => {\n        if (n.tagName == tagName) {\n          n._typeIdx = typeIdx++\n          return true\n        }\n      })\n    }\n\n    return ofTypes[tagName]\n  }\n\n  return EMPTY_ARR\n}\n\nfunction build(tokens, each) {\n  let targ = node(null, \"root\", EMPTY_SET), idx\n\n  for (let i = 0; i < tokens.length; i++) {\n    let t = tokens[i]\n\n    switch (t) {\n    case TAG_OPEN:\n      let tag = tokens[++i]\n      let attrs = EMPTY_SET\n\n      if (tokens[i+1] === ATTRS) {\n        i += 2\n        attrs = tokens[i]\n      }\n\n      idx = targ.childNodes.length\n      targ.childNodes.push(targ = node(targ, tag, attrs))\n      each(targ, idx)\n      break\n      //\tcase ATTRS:\n      //\t\tbreak;\n    case TAG_CLOSE:\n      targ = targ.parentNode\n      break\n    }\n  }\n\n  return targ\n}\n\nfunction postProc(node, idx, ctx) {\n  // add index for fast positional testing, e.g. :nth-child\n  node.idx = idx\n\n  let attrs = node.attributes\n\n  // cache seen tags, classes & ids\n  ctx.tag.add(node.tagName)\n  node.classList.forEach(v => ctx.class.add(v))\n  /*\n\tfor (let a in attrs) {\n\t\tctx.attr.add('['+a+']');\n\t\tctx.attr.add('['+a+'='+attrs[a]+']');\n\t}\n*/\n  if (attrs.has('id'))\n    ctx.attr.add('[id='+attrs.get('id')+']')\n  if (attrs.has('type'))\n    ctx.attr.add('[type='+attrs.get('type')+']')\n\n  // append to flat node list\n  ctx.nodes.push(node)\n}\n\nexport { getSibsOfType }\n\nexport const parse = html => {\n  html = html.replace(NASTIES, '')\n\n  let tokens = tokenize(html)\n\n  const ctx = {\n    nodes: [],\n    tag: new Set([\"*\"]),\n    class: new Set(),\n    attr: new Set(),\n  }\n\n  let tree = build(tokens, (node, idx) => postProc(node, idx, ctx))\n\n  return ctx\n}","import { parseErr } from './err'\n\nconst COMMENTS = /\\s*\\/\\*[\\s\\S]*?\\*\\/\\s*/gm\nconst COMBINATORS = /\\s*[>~+.#]\\s*|\\[[^\\]]+\\]|\\s+/gm\n\nconst START_AT = 1\nconst CLOSE_AT = 2\nconst SELECTORS = 3\nconst PROPERTIES = 4\nconst AT_CHUNK = 5\t\t// for @ blocks that should not be processed\n//const COMMENT;\n\n\n// mission: \"#a > b.c~g[a='a z'] y>.foo.bar\" -> [\"#a\", \"b\", \".c\", \"g\", \"[a=a z]\", \"y\", \".foo\", \".bar\"]\n// selsStr e.g. \"table > a, foo.bar\"\nfunction quickSels(selsStr) {\n  // -> [\"table > a\", \"foo.bar\"]\n  let selsArr = selsStr.split(/\\s*,\\s*/gm)\n\n  let sep = '`'\n\n  // -> [\"table > a\", \"foo.bar\", [[\"table\", \"a\"], [\"foo\", \".bar\"]]]\n  selsArr.push(selsArr.map(sel =>\n    stripAllPseudos(sel)\n      .trim()\n      .replace(COMBINATORS, (m, i) => {\n        m = m.trim()\n        return (\n          i == 0 ? m :\n            m == '.' || m == '#' ? sep + m :\n              m.length <= 1 ? sep :\n                sep + m.replace(/['\"]/gm, '')\n        )\n      })\n      .split(/`+/gm)\n  ))\n\n  return selsArr\n}\n\nconst PSEUDO_PARENTH = /:[a-z-]+\\([^()]*\\)/\n\nfunction stripAllPseudos(sel) {\n  let olen = sel.length\n\n  for (;;) {\n    sel = sel.replace(PSEUDO_PARENTH, '')\n    if (sel.length == olen)\n      break\n    olen = sel.length\n  }\n\n  return sel.replace(/:?:[a-z-]+/gm, '')\n}\n\n// pos must already be past opening @op\nfunction takeUntilMatchedClosing(css, pos, op, cl) {\n  let chunk = ''\n  let unclosed = 1\n\n  while (1) {\n    if (css[pos] == op)\n      unclosed++\n    else if (css[pos] == cl)\n      unclosed--\n\n    if (unclosed == 0)\n      break\n\n    chunk += css[pos++]\n  }\n\n  return chunk\n}\n\nfunction tokenize(css) {\n  // TODO: dry out with selector regexes?\n  const RE = {\n    RULE_HEAD:\t/\\s*([^{;]+?)\\s*[{;]\\s*/my,\n    RULE_TAIL:\t/\\s*([^}]*?)\\s*\\}/my,\n    AT_TAIL:\t/\\s*\\}/my,\n    RULE_FULL:\t/\\s*([^{]*?)\\{([^}]+?)\\}/my,\n    //\tCOMMENT:\t/\\s*\\/\\*.*?\\*\\/\\s*/my,\n  }\n\n  let inAt = 0\n\n  let pos = 0, m, tokens = []\n\n  function syncPos(re) {\n    pos = re.lastIndex\n    for (let k in RE)\n      RE[k].lastIndex = pos\n  }\n\n  function next() {\n    if (inAt > 0) {\n      m = RE.AT_TAIL.exec(css)\n\n      if (m != null) {\n        inAt--\n        tokens.push(CLOSE_AT)\n        syncPos(RE.AT_TAIL)\n        return\n      }\n    }\n\n    // try to find rule start or @ start\n    m = RE.RULE_HEAD.exec(css)\n\n    if (m != null) {\n      let pre = m[1]\n\n      syncPos(RE.RULE_HEAD)\n\n      if (pre[0] == '@') {\n        let med = pre.match(/@[a-z-]+/)[0]\n\n        switch (med) {\n        // containers (can contain selectors and other @), start with '{' and terminate on matched '}'\n        case '@media':\n        case '@supports':\n        case '@document':\n          inAt++\n          tokens.push(START_AT, pre)\n          break\n          // inlines, terminated by ';'\n        case '@import':\n        case '@charset':\n        case '@namespace':\n          tokens.push(AT_CHUNK, pre + ';')\n          break\n        default:\n          // blobs (do not contain selectors), start with '{' and terminate on matched '}'\n          //\tcase '@font-face':\n          //\tcase '@keyframes':\n          //\tcase '@page':\n          //\tcase '@counter-style':\n          //\tcase '@font-feature-values':\n          inAt++\n          let chunk = takeUntilMatchedClosing(css, pos, '{', '}')\n          syncPos({ lastIndex: pos + chunk.length })\n          tokens.push(START_AT, pre, AT_CHUNK, chunk)\n          break\n        }\n      }\n      else {\n        tokens.push(SELECTORS, quickSels(m[1]))\n        // if cannot contain nested {}\n        m = RE.RULE_TAIL.exec(css)\n        tokens.push(PROPERTIES, m[1])\n        syncPos(RE.RULE_TAIL)\n      }\n    }\n    else\n      pos = css.length\n  }\n\n  let prevPos = pos\n\n  while (pos < css.length) {\n    next()\n\n    if (prevPos === pos)\n      parseErr('css', css, pos)\n\n    prevPos = pos\n  }\n\n  //\tconst fs = require('fs');\n  //\tfs.writeFileSync(__dirname + '/tokens.json', JSON.stringify(tokens, null, 2), 'utf8');\n\n  return tokens\n}\n\nexport function parse(css, keepAlternate) {\n  // strip comments (for now)\n  css = css.replace(COMMENTS, keepAlternate ? (m) => {\n    if (/^\\s*\\/\\* @alternate \\*\\/\\s*$/.test(m)) return m\n    return ''\n  } : '')\n  return tokenize(css)\n}\n\nfunction stripEmptyAts(css) {\n  return css.replace(/@[a-z-]+[^{]+\\{\\s*\\}/gm, '')\n}\n\nfunction generate(tokens, kept) {\n  let out = '', lastSelsLen = 0\n\n  for (let i = 0; i < tokens.length; i++) {\n    let tok = tokens[i]\n\n    switch (tok) {\n    case SELECTORS:\n      let sels = tokens[++i]\n      lastSelsLen = sels.length\n\n      if (lastSelsLen > 0) {\n        sels.forEach(s => kept.add(s))\n        out += sels.join()\n      }\n      break\n    case PROPERTIES:\n      if (lastSelsLen > 0)\n        out += '{' + tokens[++i] + '}'\n      break\n    case START_AT:\n      out += tokens[++i] + '{'\n      break\n    case CLOSE_AT:\n      out += '}'\n      break\n    case AT_CHUNK:\n      out += tokens[++i]\n      break\n    }\n  }\n\n  // strip leftover empty @ rules\n  return stripEmptyAts(out)\n}\n\nexport { generate }\nexport { SELECTORS }\nexport { takeUntilMatchedClosing }\nexport { stripEmptyAts }","// adapted from https://github.com/fb55/nth-check/blob/master/compile.js\n\n// https://css-tricks.com/how-nth-child-works/\n// https://css-tricks.com/useful-nth-child-recipies/\n// https://css-tricks.com/examples/nth-child-tester/\n// http://nthmaster.com/\n\n/* leon's incomplete attempt\nfunction nthChild(el, a, b) {\n\tif (a < 0) {\n\t\tconsole.log(\"Unimplemented: -A in :nth-child(An+B)\", m);\n\t\treturn true;\n\t}\n\n\tlet p = el.idx + 1;\n\n\tlet diff = p - b;\n\n\treturn diff >= 0 && diff % a == 0;\n}\n*/\n\n\n/*\n\ttests if an element's pos (index+1) matches the given rule\n\thighly optimized to return the fastest solution\n*/\nfunction nth(a, b, pos) {\n  //when b <= 0, a*n won't be possible for any matches when a < 0\n  //besides, the specification says that no element is matched when a and b are 0\n  if (b < 0 && a <= 0)\n    return false\n\n  //when a is in the range -1..1, it matches any element (so only b is checked)\n  if (a === -1)\n    return pos <= b\n  if (a === 0)\n    return pos === b\n  //when b <= 0 and a === 1, they match any element\n  if (a === 1)\n    return b < 0 || pos >= b\n\n  //when a > 0, modulo can be used to check if there is a match\n  let bMod = b % a\n\n  if (bMod < 0)\n    bMod += a\n\n  if (a > 1)\n    return pos >= b && pos % a === bMod\n\n  a *= -1 //make `a` positive\n\n  return pos <= b && pos % a === bMod\n}\n\nexport { nth }","import { takeUntilMatchedClosing } from './css'\n\n// assumes stripPseudos(sel); has already been called\nfunction parse(sel) {\n  const RE = {\n    IDENT:\t/([\\w*-]+)/iy,\n    ATTR:\t/([\\w-]+)(?:(.?=)[\"']?([^\\]]*?)[\"']?)?\\]/iy,\n    PSEUDO: /([\\w-]+)(\\()?/iy,\n    MODE:\t/\\s*[:.#\\[]\\s*/iy,\n    COMB:\t/\\s*[>~+]\\s*|\\s+/iy,\n  }\n\n  let idx = 0\n  let toks = []\n  let m\n  let lastComb = -1\n\n  function setIdx(re) {\n    idx = re.lastIndex\n    for (let k in RE)\n      RE[k].lastIndex = idx\n  }\n\n  function next() {\n    let matched = false\n\n    if (m = RE.COMB.exec(sel)) {\n      matched = true\n\n      let mode = m[0].trim()\n\n      if (mode == '')\n        mode = ' '\n\n      toks.push(mode)\n      setIdx(RE.COMB)\n      lastComb = toks.length - 1\n    }\n    else if (m = RE.MODE.exec(sel)) {\n      matched = true\n\n      let mode = m[0].trim()\n\n      setIdx(RE.MODE)\n\n      if (mode == ':') {\n        m = RE.PSEUDO.exec(sel)\n\n        if (m[2] == '(') {\n          let subsel = takeUntilMatchedClosing(sel, RE.PSEUDO.lastIndex, '(', ')')\n          RE.PSEUDO.lastIndex += subsel.length + 1\n          m[2] = m[1] == 'not' ? parse(subsel) : subsel\n        }\n\n        toks.splice(\n          lastComb + 1,\n          0,\n          m[2],\n          m[1],\n          mode\n        )\n        setIdx(RE.PSEUDO)\n      }\n      else if (mode == '[') {\n        m = RE.ATTR.exec(sel)\n        toks.splice(\n          lastComb + 1,\n          0,\n          m[3],\n          m[2],\n          m[1],\n          mode,\n        )\n        setIdx(RE.ATTR)\n      }\n      else {\n        m = RE.IDENT.exec(sel)\n        toks.push(m[1], mode)\n        setIdx(RE.IDENT)\n      }\n    }\n    else if (m = RE.IDENT.exec(sel)) {\n      matched = true\n      toks.push(m[1], '_')\n      setIdx(RE.IDENT)\n    }\n\n    return matched\n  }\n\n  while (idx < sel.length)\n    next()\n\n  return toks\n}\n\nconst RE_NTH = /^([+-]?\\d*)?n([+-]\\d+)?$/\n\nfunction parseNth(expr) {\n  let m = RE_NTH.exec(expr)\n\n  if (m != null) {\n    let a = m[1]\n    let b = m[2]\n\n    if (a == null || a == \"+\")\n      a = 1\n    else if (a == \"-\")\n      a = -1\n    else\n      a = +a\n\n    if (b == null)\n      b = 0\n    else\n      b = +b\n\n    return [a, b]\n  }\n\n  return [0, 0]\n}\n\nexport { parse }\nexport { parseNth }","import { nth as isNth } from './nth'\nimport { getSibsOfType } from './html'\nimport { parse as parseSel, parseNth } from './sel'\n\nfunction matchesType(el, name) {\n  return name == el.tagName || name == '*'\n}\n\nfunction matchesAttr(el, name, selVal, matcher) {\n  matcher = matcher || '='\n\n  let attrs = el.attributes\n\n  if (attrs.has(name)) {\n    let attrVal = attrs.get(name)\n\n    switch (matcher) {\n    case '=': return selVal == null || selVal == attrVal\n    case '*=': return attrVal.indexOf(selVal) != -1\n    case '^=': return attrVal.startsWith(selVal)\n    case '$=': return attrVal.endsWith(selVal)\n    case '~=': return (\n      selVal == attrVal ||\n\t\t\t\tattrVal.startsWith(selVal + ' ') ||\n\t\t\t\tattrVal.endsWith(' ' + selVal) ||\n\t\t\t\tattrVal.indexOf(' ' + selVal + ' ') != -1\n    )\n    }\n  }\n\n  return false\n}\n\nfunction matchesClass(el, name) {\n  return el.classList.has(name)\n}\n\n// DRYed out nth-child/nth-last-child logic\nfunction matchesNth(pos, val) {\n  let res\n\n  if (val == 'odd')\n    res = pos % 2 == 1\n  else if (val == 'even')\n    res = pos % 2 == 0\n  // nth-child(5)\n  else if (/^\\d+$/.test(val))\n    res = pos == +val\n  // :nth-child(An+B)\n  else {\n    let nth = parseNth(val)\n    res = isNth(nth[0], nth[1], pos)\n  }\n\n  return res\n}\n\n// TODO: look for perf improvements for rules where rightmost selector is *\n// maybe look at next non-* selector and check it it has any children/desc?\nfunction find(m, ctx) {\n  let name, val, mat, par, tidx, res\n\n  while (ctx.idx > -1) {\n    switch(m[ctx.idx]) {\n    case '_':\n      name\t= m[--ctx.idx]\n      res\t\t= matchesType(ctx.node, name)\n      ctx.idx--\n      break\n    case '#':\n      val\t\t= m[--ctx.idx]\n      res\t\t= matchesAttr(ctx.node, 'id', val, '=')\n      ctx.idx--\n      break\n    case '.':\n      name\t= m[--ctx.idx]\n      res\t\t= matchesClass(ctx.node, name)\n      ctx.idx--\n      break\n    case '[':\n      name\t= m[--ctx.idx]\n      mat\t\t= m[--ctx.idx]\n      val\t\t= m[--ctx.idx]\n      res\t\t= matchesAttr(ctx.node, name, val, mat)\n      ctx.idx--\n      break\n    case ':':\n      name\t= m[--ctx.idx]\n      val\t\t= m[--ctx.idx]\n\n      let n = ctx.node\n      let tag = n.tagName\n      tidx = n.idx\n      par = n.parentNode\n      let len = par ? par.childNodes.length : 1\n      let tsibs\n\n      switch (name) {\n      case 'not':\n        res = !find(val, { node: ctx.node, idx: val.length - 1 })\n        break\n      case 'first-child':\n        res = tidx == 0\n        break\n      case 'last-child':\n        res = tidx == len - 1\n        break\n      case 'only-child':\n        res = len == 1\n        break\n      case 'nth-child':\n        res = matchesNth(tidx + 1, val)\n        break\n      case 'nth-last-child':\n        res = matchesNth(len - tidx, val)\n        break\n      case 'first-of-type':\n        tsibs = getSibsOfType(par, tag)\n        res = n._typeIdx == 0\n        break\n      case 'last-of-type':\n        tsibs = getSibsOfType(par, tag)\n        res = n._typeIdx == tsibs.length - 1\n        break\n      case 'only-of-type':\n        tsibs = getSibsOfType(par, tag)\n        res = tsibs.length == 1\n        break\n      case 'nth-of-type':\n        tsibs = getSibsOfType(par, tag)\n        res = matchesNth(n._typeIdx + 1, val)\n        break\n      case 'nth-last-of-type':\n        tsibs = getSibsOfType(par, tag)\n        res = matchesNth(tsibs.length - n._typeIdx, val)\n        break\n      }\n\n      ctx.idx--\n      break\n    case ' ':\n      tidx = --ctx.idx\n      res = false\n      while (!res) {\n        par = ctx.node.parentNode\n        if (par == null)\n          break\n        ctx.idx = tidx\n        ctx.node = par\n        res = find(m, ctx)\n      }\n      break\n    case '>':\n      ctx.idx--\n      par = ctx.node.parentNode\n      if (par != null) {\n        ctx.node = par\n        res = find(m, ctx)\n      }\n      else\n        res = false\n      break\n    case '+':\n      ctx.idx--\n      par = ctx.node.parentNode\n      if (par != null && ctx.node.idx > 0) {\n        ctx.node = par.childNodes[ctx.node.idx - 1]\n        res = find(m, ctx)\n      }\n      else\n        res = false\n      break\n    case '~':\n      ctx.idx--\n      res = false\n      tidx = ctx.node.idx\n      par = ctx.node.parentNode\n      if (par != null && tidx > 0) {\n        for (let i = 0; i < tidx && !res; i++) {\n          ctx.node = par.childNodes[i]\n          res = find(m, ctx)\n        }\n      }\n      break\n    }\n\n    if (!res)\n      break\n  }\n\n  return res\n}\n\nfunction _some(nodes, m) {\n  return nodes.some(node => find(m, {\n    idx: m.length - 1,\n    node,\n  }))\n}\n\nexport { matchesAttr }\n\nexport const some = (nodes, sel) => {\n  return _some(nodes, Array.isArray(sel) ? sel : parseSel(sel))\n}","import { LOGGING } from './env'\nimport { takeUntilMatchedClosing } from './css'\n\nfunction splice(str, index, count, add) {\n  return str.slice(0, index) + add + str.slice(index + count)\n}\n\nfunction removeBackwards(css, defs, used, shouldDrop, type) {\n  type = type || ''\n\n  for (let i = defs.length - 1; i > -1; i--) {\n    let d = defs[i]\n\n    if (!used.has(d[2]) && shouldDrop(type + d[2]) === true)\n      css = splice(css, d[0], d[1], '')\n  }\n\n  return css\n}\n\nconst CUSTOM_PROP_DEF = /([{};])\\s*(--[\\w-]+)\\s*:\\s*([^;}]+);?\\s*/gm\nconst CUSTOM_PROP_USE = /var\\(([\\w-]+)\\)/gm\nconst COMMA_SPACED = /\\s*,\\s*/gm\n\nfunction resolveCustomProps(css) {\n  let defs = {}, m\n\n  // while var(--*) patterns exist\n  while (CUSTOM_PROP_USE.test(css)) {\n    // get all defs\n    while (m = CUSTOM_PROP_DEF.exec(css))\n      defs[m[2]] = m[3]\n\n    // replace any non-composites\n    css = css.replace(CUSTOM_PROP_USE, (m0, m1) => !CUSTOM_PROP_USE.test(defs[m1]) ? defs[m1] : m0)\n  }\n\n  return css\n}\n\nfunction dropKeyFrames(css, flatCss, shouldDrop) {\n  // defined\n  let defs = []\n\n  let RE = /@(?:-\\w+-)?keyframes\\s+([\\w-]+)\\s*\\{/gm, m\n\n  while (m = RE.exec(css)) {\n    let ch = takeUntilMatchedClosing(css, RE.lastIndex, '{', '}')\n    defs.push([m.index, m[0].length + ch.length + 1, m[1]])\n  }\n\n  // used\n  let used = new Set()\n\n  let RE2 = /animation(?:-name)?:([^;!}]+)/gm\n\n  while (m = RE2.exec(flatCss)) {\n    m[1].trim().split(COMMA_SPACED).forEach(a => {\n      let keyFramesName = a.match(/^\\S+/)[0]\n\n      if (/^-?[\\d.]+m?s/.test(keyFramesName))\n        keyFramesName = a.match(/\\S+$/)[0]\n\n      used.add(keyFramesName)\n    })\n  }\n\n  return removeBackwards(css, defs, used, shouldDrop, '@keyframes ')\n}\n\nfunction cleanFontFam(fontFam) {\n  return fontFam.trim().replace(/'|\"/gm, '').split(COMMA_SPACED)\n}\n\nfunction dropFontFaces(css, flatCss, shouldDrop) {\n  // defined\n  let gm = 'gm',\n    re00 = '@font-face[^}]+\\\\}+',\n    RE00 = RegExp(re00, gm),\n    m\n\n  // get all @font-face blocks in original css\n  let defs = []\n\n  while (m = RE00.exec(css))\n    defs.push([m.index, m[0].length])\n\n  let re01 = 'font-family:([^;!}]+)',\n    RE01 = RegExp(re01),\n    m2, i = 0\n\n  // get all @font-face blocks in resolved css\n  while (m = RE00.exec(flatCss)) {\n    m2 = RE01.exec(m[0])\n    defs[i++].push(cleanFontFam(m2[1])[0])\n  }\n\n  // used\n  let used = new Set()\n\n  let RE02 = RegExp(re00 + '|' + re01, gm)\n\n  while (m = RE02.exec(flatCss)) {\n    if (m[0][0] !== '@')\n      cleanFontFam(m[1]).forEach(a => used.add(a))\n  }\n\n  let RE03 = /font:([^;!}]+)/gm\n  let RE04 = /\\s*(?:['\"][\\w- ]+['\"]|[\\w-]+)\\s*(?:,|$)/gm\n  let t\n\n  while (m = RE03.exec(flatCss)) {\n    t = ''\n    while (m2 = RE04.exec(m[1]))\n      t += m2[0]\n\n    cleanFontFam(t).forEach(a => used.add(a))\n  }\n\n  return removeBackwards(css, defs, used, shouldDrop, '@font-face ')\n}\n\nfunction dropCssVars(css, shouldDrop) {\n  let css2 = css\n\n  do {\n    css = css2\n    css2 = css.replace(CUSTOM_PROP_DEF, (m, m1, m2) => css.indexOf('var(' + m2 + ')') != -1 ? m : m1)\n  } while (css2 != css)\n\n  return css2\n}\n\nfunction postProc(out, shouldDrop, log, START) {\n  // flatten & remove custom props to ensure no accidental\n  // collisions for regexes, e.g. --animation-name: --font-face:\n  // this is used for testing for \"used\" keyframes and fonts and\n  // parsing resolved 'font-family:' names from @font-face defs,\n  // so does not need to be regenerated during iterative purging\n  let flatCss = resolveCustomProps(out).replace(CUSTOM_PROP_DEF, (m, m1) => m1)\n\n  out = dropKeyFrames(out, flatCss, shouldDrop)\n\n  LOGGING && log.push([+new Date() - START, 'Drop unused @keyframes'])\n\n  out = dropFontFaces(out, flatCss, shouldDrop)\n\n  LOGGING && log.push([+new Date() - START, 'Drop unused @font-face'])\n\n  out = dropCssVars(out, shouldDrop)\n\n  LOGGING && log.push([+new Date() - START, 'Drop unused --* props'])\n\n  // kill any leftover empty blocks e.g. :root {}\n  return out.replace(/[^{}]+\\{\\s*\\}/gm, '')\n}\n\nexport { postProc }","import { parse as parseHTML } from './html'\nimport { parse as parseCSS, generate as generateCSS, SELECTORS, stripEmptyAts } from './css'\nimport { some, matchesAttr } from './find'\nimport { postProc } from './postproc'\nimport { LOGGING } from './env'\n\n/*!\n * dropcss by Leon Sorokin\n * https://github.com/leeoniya/dropcss\n * Copyright(c) 2020\n * MIT Licensed\n */\n\nconst ATTRIBUTES = /\\[([\\w-]+)(?:(.?=)\"?([^\\]]*?)\"?)?\\]/i\n\nconst pseudoAssertable = /:(?:first|last|nth|only|not)\\b/\t\t// |lang\n\nfunction stripNonAssertablePseudos(sel) {\n  // strip pseudo-elements and transient pseudo-classes\n  return sel.replace(/:?:[a-z-]+/gm, (m) =>\n    m.startsWith('::') || !pseudoAssertable.test(m) ? '' : m\n  )\n  // remove any empty leftovers eg :not() - [tabindex=\"-1\"]:focus:not(:focus-visible)\n    .replace(/:[a-z-]+\\(\\)/gm, '')\n}\n\nconst drop = sel => true\n\n/**\n * @type {_trapcss.trapcss}\n */\nfunction dropcss(opts) {\n  const { html, shouldDrop = drop, css, keepAlternate = false } = opts\n\n  let log, START\n\n  if (LOGGING) {\n    START = +new Date()\n    log = [[0, 'Start']]\n  }\n\n  // {nodes, tag, class, id}\n  const H = parseHTML(html)\n\n  LOGGING && log.push([+new Date() - START, 'HTML parsed & processed'])\n\n  let tokens = parseCSS(css, keepAlternate)\n\n  LOGGING && log.push([+new Date() - START, 'CSS tokenized'])\n\n  // cache\n  let tested = {}\n\n  // null out tokens that have any unmatched sub-selectors in flat dom\n  for (let i = 0; i < tokens.length; i++) {\n    let token = tokens[i]\n\n    if (token !== SELECTORS)\n      continue\n\n    let sels = tokens[i+1]\n    let sels2 = sels[sels.length - 1]\n\n    i++\n\n    for (let j = 0; j < sels2.length; j++) {\n      let subs = sels2[j]\n\n      subsLoop:\n      for (let k = 0; k < subs.length; k++) {\n        let sub = subs[k]\n        let hasOne = false\n        let name\n\n        if (sub == '')\n          continue\n\n        // cache\n        if (sub in tested)\n          hasOne = tested[sub]\n        else {\n          // hehe Sub-Zero :D\n          switch (sub[0]) {\n          case \"#\":\n            name = sub.substr(1)\n            tested[sub] = hasOne = H.attr.has('[id=' + name + ']')\n            break\n          case \".\":\n            name = sub.substr(1)\n            tested[sub] = hasOne = H.class.has(name)\n            break\n          case \"[\":\n            // [type=...] is super common in css, so it gets special fast-path treatment, which is a large perf win\n            if (sub.startsWith('[type='))\n              tested[sub] = hasOne = H.attr.has(sub)\n            else {\n              let m = sub.match(ATTRIBUTES)\n              tested[sub] = hasOne = H.nodes.some(el => matchesAttr(el, m[1], m[3], m[2]))\n            }\n            break\n          default:\n            tested[sub] = hasOne = H.tag.has(sub)\n          }\n        }\n\n        if (!hasOne) {\n          if (shouldDrop(sels[j]) === true)\n            sels[j] = null\n          else\n            tested[sels[j]] = true\t\t\t// should this be pseudo-stripped?\n\n          break subsLoop\n        }\n      }\n    }\n  }\n\n  LOGGING && log.push([+new Date() - START, 'Context-free first pass'])\n\n  for (let i = 0; i < tokens.length; i++) {\n    let tok = tokens[i]\n\n    if (tok === SELECTORS) {\n      i++\n      let len = tokens[i].length\n      tokens[i] = tokens[i].filter(s => {\n        if (typeof s == 'string') {\n          if (s in tested)\n            return tested[s]\n\n          let cleaned = stripNonAssertablePseudos(s)\n\n          if (cleaned == '')\n            return true\n\n          if (cleaned in tested)\n            return tested[cleaned]\n\n          return tested[cleaned] = (some(H.nodes, cleaned) || shouldDrop(s) !== true)\n        }\n\n        return false\n      })\n    }\n  }\n\n  LOGGING && log.push([+new Date() - START, 'Context-aware second pass'])\n\n  let kept = new Set()\n\n  let out = generateCSS(tokens, kept)\n\n  LOGGING && log.push([+new Date() - START, 'Generate output'])\n\n  out = postProc(out, shouldDrop, log, START)\n\n  LOGGING && log.forEach(e => console.log(e[0], e[1]))\n\n  return {\n    css: stripEmptyAts(out),\n    sels: kept,\n  }\n}\n\nexport default dropcss\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').trapcss} _trapcss.trapcss\n */","import '../types/externs'\nimport trapcss from './'\n\n/*!\n * trapcss: Removes unused selectors from CSS files to achieve\n * maximum optimisation. Can be used as an API function or with CLI.\n *\n * Copyright (C) 2020  Art Deco Code Limited\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nmodule.exports = {\n  '_trapcss': trapcss,\n}"],
"names":["parseErr","srcType","srcStr","pos","Error","substring","VOIDS","Set","NASTIES","RE","NAME","ATTR","TAIL","TEXT","CLOSE","tokenize","html","syncPos","re","lastIndex","k","next","m","exec","tokens","push","TAG_CLOSE","tag","TAG_OPEN","attrMap","m2","Map","set","trim","ATTRS","has","prevPos","length","EMPTY_SET","node","parent","tagName","attrs","attributes","classList","get","split","parentNode","childNodes","EMPTY_ARR","getSibsOfType","par","ofTypes","_ofTypes","typeIdx","filter","n","_typeIdx","build","each","targ","idx","i","t","postProc","ctx","add","forEach","v","class","attr","nodes","parse","replace","COMMENTS","COMBINATORS","quickSels","selsStr","selsArr","map","sel","stripAllPseudos","sep","PSEUDO_PARENTH","olen","takeUntilMatchedClosing","css","op","cl","chunk","unclosed","inAt","AT_TAIL","CLOSE_AT","RULE_HEAD","pre","match","med","START_AT","AT_CHUNK","SELECTORS","RULE_TAIL","PROPERTIES","RULE_FULL","keepAlternate","test","generate","kept","out","lastSelsLen","tok","sels","s","join","nth","a","b","bMod","setIdx","matched","COMB","mode","toks","lastComb","MODE","PSEUDO","subsel","splice","IDENT","RE_NTH","matchesAttr","el","name","selVal","matcher","attrVal","indexOf","startsWith","endsWith","matchesNth","val","res","isNth","find","tidx","mat","len","tsibs","_some","some","removeBackwards","defs","used","shouldDrop","type","d","str","slice","index","count","CUSTOM_PROP_DEF","CUSTOM_PROP_USE","COMMA_SPACED","resolveCustomProps","m0","m1","dropKeyFrames","flatCss","ch","RE2","keyFramesName","cleanFontFam","fontFam","dropFontFaces","RE00","RE01","RE02","RE03","RE04","dropCssVars","css2","ATTRIBUTES","pseudoAssertable","stripNonAssertablePseudos","drop","module","exports","dropcss","opts","H","parseHTML","parseCSS","tested","token","sels2","j","subs","sub","hasOne","substr","cleaned","Array","isArray","parseSel","generateCSS"]
}
